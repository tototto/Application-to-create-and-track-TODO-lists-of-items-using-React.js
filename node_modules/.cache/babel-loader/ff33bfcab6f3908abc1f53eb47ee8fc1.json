{"ast":null,"code":"var _jsxFileName = \"/Users/tayjunwen/Desktop/Web_Dev_Projects/Edx/homework_5/lists/src/App.js\";\nimport React, { Component } from 'react';\nimport Lists from './Lists.js';\nimport AddList from './AddList.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lists: [],\n      // this holds the name of each list\n      items: {} // this property names of this object are the names of the lists; their values are arrays of the items in each list\n\n    };\n  }\n  /**\n   * This function takes the state of an AddList component as its parameter\n   * and updates the state of this App component by adding a new entry to the \"lists\"\n   * array and then adding a new property in the \"items\" object that has the same name\n   * as the value put into the \"lists\" array. It should then re-render this App component.\n   */\n\n\n  handleAddList(s) {\n    // Implement this function!\n    this.setState = {\n      lists: this.state.lists.push(s),\n      items: this.state.items[s] = []\n    };\n    this.forceUpdate();\n  }\n  /**\n   * This function takes the state of an AddItem component as its parameter\n   * and updates the state of this App component by adding a new value to the \n   * appropriate array in the \"items\" property of the state. Keep in mind that\n   * the property names of \"items\" are the names of each list, which is mapped\n   * to an array of the items in that list. After updating the \"items\" part of \n   * the state, this function  should then re-render this App component.\n   */\n\n\n  handleAddItem(s) {\n    // Implement this function!\n    console.log(s);\n    s.For_list(); //\n    // for(var i = 0; i < this.state.lists.length; i++){\n    //     var itemFor = this.state.lists[i];\n    //     var itemElement = newItemObj[itemFor];\n    // }\n    //.push(s.newItem[this.state.items[i]])\n  }\n  /**\n   * Renders the component.\n   */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AddList, {\n      addList: this.handleAddList.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"listsDiv\",\n      className: \"List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Lists, {\n      lists: this.state.lists,\n      items: this.state.items,\n      addItem: this.handleAddItem.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tayjunwen/Desktop/Web_Dev_Projects/Edx/homework_5/lists/src/App.js"],"names":["React","Component","Lists","AddList","App","constructor","state","lists","items","handleAddList","s","setState","push","forceUpdate","handleAddItem","console","log","For_list","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE1BI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACAC,MAAAA,KAAK,EAAE,EADP;AACW;AACXC,MAAAA,KAAK,EAAE,EAFP,CAEU;;AAFV,KAAb;AAID;AAED;;;;;;;;AAMAC,EAAAA,aAAa,CAACC,CAAD,EAAI;AACb;AAEA,SAAKC,QAAL,GAAgB;AAAEJ,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBK,IAAjB,CAAsBF,CAAtB,CAAT;AACEF,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,CAAiBE,CAAjB,IAAsB;AAD/B,KAAhB;AAIA,SAAKG,WAAL;AACH;AAED;;;;;;;;;;AAQAC,EAAAA,aAAa,CAACJ,CAAD,EAAI;AACb;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ;AACAA,IAAAA,CAAC,CAACO,QAAF,GAHa,CAIb;AACA;AACA;AACA;AACA;AAIA;AACH;AAED;;;;;AAGAC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKT,aAAL,CAAmBU,IAAnB,CAAwB,IAAxB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KAAzB;AAAgC,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAAlD;AAAyD,MAAA,OAAO,EAAE,KAAKM,aAAL,CAAmBK,IAAnB,CAAwB,IAAxB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AAQD;;AA9DyB;;AAkE5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Lists from './Lists.js';\nimport AddList from './AddList.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n\t                lists: [], // this holds the name of each list\n\t                items: {} // this property names of this object are the names of the lists; their values are arrays of the items in each list\n                 };\n  }\n\n  /**\n   * This function takes the state of an AddList component as its parameter\n   * and updates the state of this App component by adding a new entry to the \"lists\"\n   * array and then adding a new property in the \"items\" object that has the same name\n   * as the value put into the \"lists\" array. It should then re-render this App component.\n   */\n  handleAddList(s) {\n      // Implement this function!\n\n      this.setState = { lists: this.state.lists.push(s),\n                        items: this.state.items[s] = []\n                      };\n\n      this.forceUpdate();\n  }\n\n  /**\n   * This function takes the state of an AddItem component as its parameter\n   * and updates the state of this App component by adding a new value to the \n   * appropriate array in the \"items\" property of the state. Keep in mind that\n   * the property names of \"items\" are the names of each list, which is mapped\n   * to an array of the items in that list. After updating the \"items\" part of \n   * the state, this function  should then re-render this App component.\n   */\n  handleAddItem(s) {\n      // Implement this function!\n      console.log(s);\n      s.For_list()\n      //\n      // for(var i = 0; i < this.state.lists.length; i++){\n      //     var itemFor = this.state.lists[i];\n      //     var itemElement = newItemObj[itemFor];\n      // }\n\n\n\n      //.push(s.newItem[this.state.items[i]])\n  }\n\n  /**\n   * Renders the component.\n   */\n  render() {\n\n    return (\n      <div className=\"App\">\n        <AddList addList={this.handleAddList.bind(this)} />\n        <div id=\"listsDiv\" className=\"List\">\n          <Lists lists={this.state.lists} items={this.state.items} addItem={this.handleAddItem.bind(this)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}